use16

org 0x7c00

jmp init

display_message:
    push eax

display_message_loop:
    lodsb
    cmp al, 0
    je display_message_done
    push si
    mov ah, 0x0e
    int 0x10
    pop si
    jmp display_message_loop

display_message_done:
    pop eax
    ret

init:
    cli
    xor eax, eax
    mov ss, ax
    mov es, ax
    mov ds, ax
    mov sp, 0x7c00
    sti
    cld

    call clear_screen

    mov bp, sp

    ; https://en.wikipedia.org/wiki/INT_13H#INT_13h_AH.3D42h:_Extended_Read_Sectors_From_Drive
    push dword 0x00000000
    push dword 0x00000001
    push ds
    push word 0x8000
    push word 16
    push word 16

    ; DL should contain the drive index already -- be careful not to stomp before this!
    ; Should we just be stashing it somewhere?
    mov si, sp
    mov ah, 0x42
    int 0x13

    ; TODO: error checking anyone?

    ; Fix the stack
    mov sp, bp

    ; Jump to boot32.asm
    jmp 0x0000:0x8000

clear_screen:
    mov ah, 0x00
    mov al, 0x03
    int 0x10
    ret

halt:
    jmp halt

times 446-($-$$) db 0

; MBR table
db 0x80, 0x00, 0x01, 0x00, 0xeb, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff
db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

db 0x55, 0xaa
